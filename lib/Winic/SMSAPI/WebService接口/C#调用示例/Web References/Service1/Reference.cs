//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.42
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.42 版自动生成。
// 
#pragma warning disable 1591

namespace WindowsApplication1.Service1 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegineUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUserPwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFaxRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVoiceRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_SMS_MOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_MSP_MOOperationCompleted;
        
        private System.Threading.SendOrPostCallback TelCallOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::WindowsApplication1.Properties.Settings.Default.WindowsApplication1_Service1_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegineUserCompletedEventHandler RegineUserCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event EditUserPwdCompletedEventHandler EditUserPwdCompleted;
        
        /// <remarks/>
        public event SendMessagesCompletedEventHandler SendMessagesCompleted;
        
        /// <remarks/>
        public event SendFaxCompletedEventHandler SendFaxCompleted;
        
        /// <remarks/>
        public event SendMMSCompletedEventHandler SendMMSCompleted;
        
        /// <remarks/>
        public event GetMessageInfoCompletedEventHandler GetMessageInfoCompleted;
        
        /// <remarks/>
        public event SendVoiceCompletedEventHandler SendVoiceCompleted;
        
        /// <remarks/>
        public event GetFaxRecordCompletedEventHandler GetFaxRecordCompleted;
        
        /// <remarks/>
        public event GetVoiceRecordCompletedEventHandler GetVoiceRecordCompleted;
        
        /// <remarks/>
        public event GetMessageRecordCompletedEventHandler GetMessageRecordCompleted;
        
        /// <remarks/>
        public event GET_SMS_MOCompletedEventHandler GET_SMS_MOCompleted;
        
        /// <remarks/>
        public event GET_MSP_MOCompletedEventHandler GET_MSP_MOCompleted;
        
        /// <remarks/>
        public event TelCallCompletedEventHandler TelCallCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegineUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegineUser(string uid, string pwd, string agent_code, string co_name, string link_man, string mob) {
            object[] results = this.Invoke("RegineUser", new object[] {
                        uid,
                        pwd,
                        agent_code,
                        co_name,
                        link_man,
                        mob});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegineUser(string uid, string pwd, string agent_code, string co_name, string link_man, string mob, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RegineUser", new object[] {
                        uid,
                        pwd,
                        agent_code,
                        co_name,
                        link_man,
                        mob}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRegineUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegineUserAsync(string uid, string pwd, string agent_code, string co_name, string link_man, string mob) {
            this.RegineUserAsync(uid, pwd, agent_code, co_name, link_man, mob, null);
        }
        
        /// <remarks/>
        public void RegineUserAsync(string uid, string pwd, string agent_code, string co_name, string link_man, string mob, object userState) {
            if ((this.RegineUserOperationCompleted == null)) {
                this.RegineUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegineUserOperationCompleted);
            }
            this.InvokeAsync("RegineUser", new object[] {
                        uid,
                        pwd,
                        agent_code,
                        co_name,
                        link_man,
                        mob}, this.RegineUserOperationCompleted, userState);
        }
        
        private void OnRegineUserOperationCompleted(object arg) {
            if ((this.RegineUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegineUserCompleted(this, new RegineUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserInfo(string uid, string pwd) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        uid,
                        pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserInfo(string uid, string pwd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserInfo", new object[] {
                        uid,
                        pwd}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetUserInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string uid, string pwd) {
            this.GetUserInfoAsync(uid, pwd, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string uid, string pwd, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        uid,
                        pwd}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditUserPwd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditUserPwd(string uid, string pwd, string newpwd) {
            object[] results = this.Invoke("EditUserPwd", new object[] {
                        uid,
                        pwd,
                        newpwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEditUserPwd(string uid, string pwd, string newpwd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EditUserPwd", new object[] {
                        uid,
                        pwd,
                        newpwd}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndEditUserPwd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditUserPwdAsync(string uid, string pwd, string newpwd) {
            this.EditUserPwdAsync(uid, pwd, newpwd, null);
        }
        
        /// <remarks/>
        public void EditUserPwdAsync(string uid, string pwd, string newpwd, object userState) {
            if ((this.EditUserPwdOperationCompleted == null)) {
                this.EditUserPwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUserPwdOperationCompleted);
            }
            this.InvokeAsync("EditUserPwd", new object[] {
                        uid,
                        pwd,
                        newpwd}, this.EditUserPwdOperationCompleted, userState);
        }
        
        private void OnEditUserPwdOperationCompleted(object arg) {
            if ((this.EditUserPwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUserPwdCompleted(this, new EditUserPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMessages(string uid, string pwd, string tos, string msg, string otime) {
            object[] results = this.Invoke("SendMessages", new object[] {
                        uid,
                        pwd,
                        tos,
                        msg,
                        otime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendMessages(string uid, string pwd, string tos, string msg, string otime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendMessages", new object[] {
                        uid,
                        pwd,
                        tos,
                        msg,
                        otime}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSendMessages(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMessagesAsync(string uid, string pwd, string tos, string msg, string otime) {
            this.SendMessagesAsync(uid, pwd, tos, msg, otime, null);
        }
        
        /// <remarks/>
        public void SendMessagesAsync(string uid, string pwd, string tos, string msg, string otime, object userState) {
            if ((this.SendMessagesOperationCompleted == null)) {
                this.SendMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessagesOperationCompleted);
            }
            this.InvokeAsync("SendMessages", new object[] {
                        uid,
                        pwd,
                        tos,
                        msg,
                        otime}, this.SendMessagesOperationCompleted, userState);
        }
        
        private void OnSendMessagesOperationCompleted(object arg) {
            if ((this.SendMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessagesCompleted(this, new SendMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendFax(string uid, string pwd, string faxno, string men, string title, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Bytes, string FileName) {
            object[] results = this.Invoke("SendFax", new object[] {
                        uid,
                        pwd,
                        faxno,
                        men,
                        title,
                        Bytes,
                        FileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendFax(string uid, string pwd, string faxno, string men, string title, byte[] Bytes, string FileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendFax", new object[] {
                        uid,
                        pwd,
                        faxno,
                        men,
                        title,
                        Bytes,
                        FileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSendFax(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFaxAsync(string uid, string pwd, string faxno, string men, string title, byte[] Bytes, string FileName) {
            this.SendFaxAsync(uid, pwd, faxno, men, title, Bytes, FileName, null);
        }
        
        /// <remarks/>
        public void SendFaxAsync(string uid, string pwd, string faxno, string men, string title, byte[] Bytes, string FileName, object userState) {
            if ((this.SendFaxOperationCompleted == null)) {
                this.SendFaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFaxOperationCompleted);
            }
            this.InvokeAsync("SendFax", new object[] {
                        uid,
                        pwd,
                        faxno,
                        men,
                        title,
                        Bytes,
                        FileName}, this.SendFaxOperationCompleted, userState);
        }
        
        private void OnSendFaxOperationCompleted(object arg) {
            if ((this.SendFaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFaxCompleted(this, new SendFaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMMS(string uid, string pwd, string mobno, string title, string content, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Bytes, string mmsFileName) {
            object[] results = this.Invoke("SendMMS", new object[] {
                        uid,
                        pwd,
                        mobno,
                        title,
                        content,
                        Bytes,
                        mmsFileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendMMS(string uid, string pwd, string mobno, string title, string content, byte[] Bytes, string mmsFileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendMMS", new object[] {
                        uid,
                        pwd,
                        mobno,
                        title,
                        content,
                        Bytes,
                        mmsFileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSendMMS(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMMSAsync(string uid, string pwd, string mobno, string title, string content, byte[] Bytes, string mmsFileName) {
            this.SendMMSAsync(uid, pwd, mobno, title, content, Bytes, mmsFileName, null);
        }
        
        /// <remarks/>
        public void SendMMSAsync(string uid, string pwd, string mobno, string title, string content, byte[] Bytes, string mmsFileName, object userState) {
            if ((this.SendMMSOperationCompleted == null)) {
                this.SendMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMMSOperationCompleted);
            }
            this.InvokeAsync("SendMMS", new object[] {
                        uid,
                        pwd,
                        mobno,
                        title,
                        content,
                        Bytes,
                        mmsFileName}, this.SendMMSOperationCompleted, userState);
        }
        
        private void OnSendMMSOperationCompleted(object arg) {
            if ((this.SendMMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMMSCompleted(this, new SendMMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMessageInfo(string snum) {
            object[] results = this.Invoke("GetMessageInfo", new object[] {
                        snum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMessageInfo(string snum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMessageInfo", new object[] {
                        snum}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetMessageInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageInfoAsync(string snum) {
            this.GetMessageInfoAsync(snum, null);
        }
        
        /// <remarks/>
        public void GetMessageInfoAsync(string snum, object userState) {
            if ((this.GetMessageInfoOperationCompleted == null)) {
                this.GetMessageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageInfoOperationCompleted);
            }
            this.InvokeAsync("GetMessageInfo", new object[] {
                        snum}, this.GetMessageInfoOperationCompleted, userState);
        }
        
        private void OnGetMessageInfoOperationCompleted(object arg) {
            if ((this.GetMessageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageInfoCompleted(this, new GetMessageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendVoice(string uid, string pwd, string vto, string vtxt, string mode, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FileBytes, string svrno, string str_time, string end_time) {
            object[] results = this.Invoke("SendVoice", new object[] {
                        uid,
                        pwd,
                        vto,
                        vtxt,
                        mode,
                        FileBytes,
                        svrno,
                        str_time,
                        end_time});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendVoice(string uid, string pwd, string vto, string vtxt, string mode, byte[] FileBytes, string svrno, string str_time, string end_time, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendVoice", new object[] {
                        uid,
                        pwd,
                        vto,
                        vtxt,
                        mode,
                        FileBytes,
                        svrno,
                        str_time,
                        end_time}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSendVoice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVoiceAsync(string uid, string pwd, string vto, string vtxt, string mode, byte[] FileBytes, string svrno, string str_time, string end_time) {
            this.SendVoiceAsync(uid, pwd, vto, vtxt, mode, FileBytes, svrno, str_time, end_time, null);
        }
        
        /// <remarks/>
        public void SendVoiceAsync(string uid, string pwd, string vto, string vtxt, string mode, byte[] FileBytes, string svrno, string str_time, string end_time, object userState) {
            if ((this.SendVoiceOperationCompleted == null)) {
                this.SendVoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVoiceOperationCompleted);
            }
            this.InvokeAsync("SendVoice", new object[] {
                        uid,
                        pwd,
                        vto,
                        vtxt,
                        mode,
                        FileBytes,
                        svrno,
                        str_time,
                        end_time}, this.SendVoiceOperationCompleted, userState);
        }
        
        private void OnSendVoiceOperationCompleted(object arg) {
            if ((this.SendVoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVoiceCompleted(this, new SendVoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFaxRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFaxRecord(string uid, string pwd, string num, string StartDate, string EndDate) {
            object[] results = this.Invoke("GetFaxRecord", new object[] {
                        uid,
                        pwd,
                        num,
                        StartDate,
                        EndDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFaxRecord(string uid, string pwd, string num, string StartDate, string EndDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFaxRecord", new object[] {
                        uid,
                        pwd,
                        num,
                        StartDate,
                        EndDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetFaxRecord(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFaxRecordAsync(string uid, string pwd, string num, string StartDate, string EndDate) {
            this.GetFaxRecordAsync(uid, pwd, num, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetFaxRecordAsync(string uid, string pwd, string num, string StartDate, string EndDate, object userState) {
            if ((this.GetFaxRecordOperationCompleted == null)) {
                this.GetFaxRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFaxRecordOperationCompleted);
            }
            this.InvokeAsync("GetFaxRecord", new object[] {
                        uid,
                        pwd,
                        num,
                        StartDate,
                        EndDate}, this.GetFaxRecordOperationCompleted, userState);
        }
        
        private void OnGetFaxRecordOperationCompleted(object arg) {
            if ((this.GetFaxRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFaxRecordCompleted(this, new GetFaxRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVoiceRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVoiceRecord(string uid, string pwd, string num, string StartDate, string EndDate) {
            object[] results = this.Invoke("GetVoiceRecord", new object[] {
                        uid,
                        pwd,
                        num,
                        StartDate,
                        EndDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVoiceRecord(string uid, string pwd, string num, string StartDate, string EndDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVoiceRecord", new object[] {
                        uid,
                        pwd,
                        num,
                        StartDate,
                        EndDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetVoiceRecord(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVoiceRecordAsync(string uid, string pwd, string num, string StartDate, string EndDate) {
            this.GetVoiceRecordAsync(uid, pwd, num, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetVoiceRecordAsync(string uid, string pwd, string num, string StartDate, string EndDate, object userState) {
            if ((this.GetVoiceRecordOperationCompleted == null)) {
                this.GetVoiceRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVoiceRecordOperationCompleted);
            }
            this.InvokeAsync("GetVoiceRecord", new object[] {
                        uid,
                        pwd,
                        num,
                        StartDate,
                        EndDate}, this.GetVoiceRecordOperationCompleted, userState);
        }
        
        private void OnGetVoiceRecordOperationCompleted(object arg) {
            if ((this.GetVoiceRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVoiceRecordCompleted(this, new GetVoiceRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMessageRecord(string uid, string pwd, string num, string StartDate, string EndDate, string isday) {
            object[] results = this.Invoke("GetMessageRecord", new object[] {
                        uid,
                        pwd,
                        num,
                        StartDate,
                        EndDate,
                        isday});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMessageRecord(string uid, string pwd, string num, string StartDate, string EndDate, string isday, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMessageRecord", new object[] {
                        uid,
                        pwd,
                        num,
                        StartDate,
                        EndDate,
                        isday}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetMessageRecord(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageRecordAsync(string uid, string pwd, string num, string StartDate, string EndDate, string isday) {
            this.GetMessageRecordAsync(uid, pwd, num, StartDate, EndDate, isday, null);
        }
        
        /// <remarks/>
        public void GetMessageRecordAsync(string uid, string pwd, string num, string StartDate, string EndDate, string isday, object userState) {
            if ((this.GetMessageRecordOperationCompleted == null)) {
                this.GetMessageRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageRecordOperationCompleted);
            }
            this.InvokeAsync("GetMessageRecord", new object[] {
                        uid,
                        pwd,
                        num,
                        StartDate,
                        EndDate,
                        isday}, this.GetMessageRecordOperationCompleted, userState);
        }
        
        private void OnGetMessageRecordOperationCompleted(object arg) {
            if ((this.GetMessageRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageRecordCompleted(this, new GetMessageRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_SMS_MO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GET_SMS_MO(string uid, string pwd, string IDtype) {
            object[] results = this.Invoke("GET_SMS_MO", new object[] {
                        uid,
                        pwd,
                        IDtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGET_SMS_MO(string uid, string pwd, string IDtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GET_SMS_MO", new object[] {
                        uid,
                        pwd,
                        IDtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGET_SMS_MO(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GET_SMS_MOAsync(string uid, string pwd, string IDtype) {
            this.GET_SMS_MOAsync(uid, pwd, IDtype, null);
        }
        
        /// <remarks/>
        public void GET_SMS_MOAsync(string uid, string pwd, string IDtype, object userState) {
            if ((this.GET_SMS_MOOperationCompleted == null)) {
                this.GET_SMS_MOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_SMS_MOOperationCompleted);
            }
            this.InvokeAsync("GET_SMS_MO", new object[] {
                        uid,
                        pwd,
                        IDtype}, this.GET_SMS_MOOperationCompleted, userState);
        }
        
        private void OnGET_SMS_MOOperationCompleted(object arg) {
            if ((this.GET_SMS_MOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_SMS_MOCompleted(this, new GET_SMS_MOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_MSP_MO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GET_MSP_MO(string uid, string pwd, string IDtype) {
            object[] results = this.Invoke("GET_MSP_MO", new object[] {
                        uid,
                        pwd,
                        IDtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGET_MSP_MO(string uid, string pwd, string IDtype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GET_MSP_MO", new object[] {
                        uid,
                        pwd,
                        IDtype}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGET_MSP_MO(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GET_MSP_MOAsync(string uid, string pwd, string IDtype) {
            this.GET_MSP_MOAsync(uid, pwd, IDtype, null);
        }
        
        /// <remarks/>
        public void GET_MSP_MOAsync(string uid, string pwd, string IDtype, object userState) {
            if ((this.GET_MSP_MOOperationCompleted == null)) {
                this.GET_MSP_MOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_MSP_MOOperationCompleted);
            }
            this.InvokeAsync("GET_MSP_MO", new object[] {
                        uid,
                        pwd,
                        IDtype}, this.GET_MSP_MOOperationCompleted, userState);
        }
        
        private void OnGET_MSP_MOOperationCompleted(object arg) {
            if ((this.GET_MSP_MOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_MSP_MOCompleted(this, new GET_MSP_MOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TelCall", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TelCall(string uid, string pwd, string host_call, string caller) {
            object[] results = this.Invoke("TelCall", new object[] {
                        uid,
                        pwd,
                        host_call,
                        caller});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTelCall(string uid, string pwd, string host_call, string caller, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TelCall", new object[] {
                        uid,
                        pwd,
                        host_call,
                        caller}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndTelCall(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TelCallAsync(string uid, string pwd, string host_call, string caller) {
            this.TelCallAsync(uid, pwd, host_call, caller, null);
        }
        
        /// <remarks/>
        public void TelCallAsync(string uid, string pwd, string host_call, string caller, object userState) {
            if ((this.TelCallOperationCompleted == null)) {
                this.TelCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTelCallOperationCompleted);
            }
            this.InvokeAsync("TelCall", new object[] {
                        uid,
                        pwd,
                        host_call,
                        caller}, this.TelCallOperationCompleted, userState);
        }
        
        private void OnTelCallOperationCompleted(object arg) {
            if ((this.TelCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TelCallCompleted(this, new TelCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void RegineUserCompletedEventHandler(object sender, RegineUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegineUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegineUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EditUserPwdCompletedEventHandler(object sender, EditUserPwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditUserPwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditUserPwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SendMessagesCompletedEventHandler(object sender, SendMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SendFaxCompletedEventHandler(object sender, SendFaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SendMMSCompletedEventHandler(object sender, SendMMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetMessageInfoCompletedEventHandler(object sender, GetMessageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SendVoiceCompletedEventHandler(object sender, SendVoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetFaxRecordCompletedEventHandler(object sender, GetFaxRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFaxRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFaxRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetVoiceRecordCompletedEventHandler(object sender, GetVoiceRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVoiceRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVoiceRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetMessageRecordCompletedEventHandler(object sender, GetMessageRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GET_SMS_MOCompletedEventHandler(object sender, GET_SMS_MOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_SMS_MOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_SMS_MOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GET_MSP_MOCompletedEventHandler(object sender, GET_MSP_MOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_MSP_MOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_MSP_MOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void TelCallCompletedEventHandler(object sender, TelCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TelCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TelCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591